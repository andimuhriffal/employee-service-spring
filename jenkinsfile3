pipeline {
    agent any

    environment {
        SONARQUBE_SERVER = 'MySonarQube' // nama credential SonarQube di Jenkins
        JAVA_HOME = '/usr/lib/jvm/java-17-openjdk-amd64'
    }

    tools {
        maven 'Maven 3.8' // sesuaikan dengan nama Maven yang di-setup di Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build All Services') {
            steps {
                sh 'mvn clean install -DskipTests'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv("${SONARQUBE_SERVER}") {
                    sh """
                    mvn sonar:sonar \
                        -Dsonar.projectKey=employee-service \
                        -Dsonar.projectName=Employee Service \
                        -Dsonar.host.url=$SONAR_HOST_URL \
                        -Dsonar.login=$SONAR_AUTH_TOKEN
                    """
                }
            }
        }

        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}
